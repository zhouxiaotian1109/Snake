<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
	<!-- <context-param> <param-name>contextConfigLocation</param-name> <param-value>classpath*:applicationContext*.xml</param-value> </context-param> 上下文监听，默认读取 
		WEB-INF/applicationContext.xml -->
	<!-- 加载 application context -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:/config/applicationContext.xml
		</param-value>
	</context-param>

	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 可以不配置.默认所对应的配置文件是WEB-INF下的{servlet-name}-servlet.xml，这里便是：spring-servlet.xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/config/spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- 这里可以用 / 但不能用 /*，拦截了所有请求会导致静态资源无法访问，所以要在spring-servlet.xml中配置mvc:resources -->
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>*.ctrl</url-pattern>
	</servlet-mapping>

	<!-- 为防止log4j配置冲突，每个项目配置不同的webAppRootKey -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>snakefuzion-service.root</param-value>
	</context-param>

	<!--自定义由Sprng载入的Log4j配置文件位置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/properties/common/log4j.properties</param-value>
	</context-param>
	<!-- Web 项目 Spring 加载 Log4j 的监听 -->
	<listener id="log4jConfigListener">
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>


	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- rpc相关 -->
	<!-- <servlet> <servlet-name>WebServiceDispatcher</servlet-name> <servlet-class>com.olymtech.cp.common.rpc.WebServiceDispatcher</servlet-class> <init-param> 
		<param-name>defaultClientHelperName</param-name> <param-value>cpwxmgWebServiceHelper</param-value> </init-param> </servlet> <servlet-mapping> <servlet-name>WebServiceDispatcher</servlet-name> 
		<url-pattern>/service</url-pattern> </servlet-mapping> -->

	<!-- 默认页面 -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!--session 过期时间 -->
	<session-config>
		<session-timeout>0</session-timeout>
	</session-config>
</web-app>